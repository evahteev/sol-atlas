@use '@/styles/mixins' as mixins;

.container {
  composes: radii from '@/styles/_common.scss';
  text-align: start;

  &:where(:has(> .body > .textarea)) {
    --_height: calc(5lh + 32px);
  }
}

.inputable {
  display: flex;
  flex-flow: column;
  gap: 4px;
  transition: border 0.25s ease;

  .caption {
    color: var(--color-text-comment);
  }
}

.caption {
  transition: 0.25s ease;
}

.control {
  position: absolute;
  margin: 0px;
  width: 20px;
  height: 20px;
  overflow: hidden;
  opacity: 0;
}

.checkable {
  width: max-content;
  max-width: 100%;
}

.checkable,
.switchable {
  position: relative;
  display: flex;
  gap: 16px;

  .caption {
    font-size: 14px;
    line-height: 20px;
    flex: 1 1 max-content;
    display: flex;
    gap: 8px;
    color: var(--color-text-main);
  }
}

.switchable {
  .control {
    & ~ .caption {
      &::after {
        content: '';
        margin-inline-start: auto;
        display: inline-block;
        vertical-align: middle;
        flex: 0 0 auto;
        width: 24px;
        height: 20px;
        border-radius: calc(var(--radii-root) * 0.375);
        border: 4px var(--color-dark-10) solid;
        background: var(--color-text-main);
        box-shadow: inset -12px 0 var(--color-dark-10);
        transition: 0.25s ease;
        cursor: pointer;
        outline: none;
      }
    }

    &:focus-visible ~ .caption {
      &::after {
        outline: 1px solid var(--color-primary);
        outline-offset: 2px;
      }
    }

    &:checked ~ .caption {
      &::after {
        border-color: var(--color-primary);
        box-shadow: inset 12px 0 var(--color-primary);
      }
    }
  }
}

.file {
  flex: 0 0 100%;
  display: flex;
  align-items: flex-start;
  gap: 16px;

  &Body {
  }

  &Control {
    position: absolute;
    margin: -1px;
    overflow: hidden;
    opacity: 0;
    width: 1px;
    height: 1px;

    & + .input {
      cursor: pointer;
      outline: none;
      display: inline-flex;
      background: var(--color-dark-20);
      padding: calc((var(--size, 40px) - 1lh - 2px) / 2) 15px;
    }

    &:focus-visible + .input,
    .input:hover {
      outline: 1px solid var(--color-primary);
      outline-offset: 2px;
      color: var(--color-text-main);
    }

    &:disabled > .input {
      background: var(--color-dark-90);
    }
  }
}

.header:has(+ .body > .input:required) > .caption::after {
  content: ' *';
  color: var(--color-danger);
}

.checkable {
  align-items: center;
  gap: 16px;

  .control {
    & ~ .caption {
      &::before {
        content: '';
        order: 0;
        display: inline-block;
        vertical-align: middle;
        flex: 0 0 auto;
        width: 20px;
        height: 20px;
        margin: 0;
        border: 1px var(--color-text-main) solid;
        border-radius: calc(var(--radii-root) * 0.25);
        background: transparent no-repeat;
        box-shadow: none;
        transition: 0.25s ease;
        cursor: pointer;
        outline: none;
      }
    }

    &[type='radio'] {
      & ~ .caption {
        &::before {
          border-radius: 50%;
        }
      }
    }

    &[type='checkbox'] ~ .caption {
      &::before {
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 10 10' width='10' height='10'%3E%3Cpath fill='%23000' d='M3.64 6.16 1.41 3.93 0 5.35l3.77 3.77 5.7-6.84L7.95 1l-4.3 5.16Z'/%3E%3C/svg%3E");
        background-position: center 20px;
        background-size: 20px;
      }
    }

    &[type='checkbox']:checked ~ .caption {
      &::before {
        border-color: transparent;
        background-color: var(--color-primary);
        background-size: 10px;
        background-position: center;
      }
    }

    &[type='radio']:checked ~ .caption {
      &::before {
        box-shadow: inset 0 0 0 4px var(--color-primary);
        background: var(--color-light);
        border-color: var(--color-primary);
      }
    }

    &:focus-visible ~ .caption {
      &::before {
        outline: 1px solid var(--color-primary);
        outline-offset: 2px;
      }
    }
  }
}

.body {
  display: flex;
  align-items: center;
  position: relative;
  transition: 0.25s ease;

  --_field-pv: calc((var(--size, 40px) - 1lh - 2px) / 2);
}

.input {
  flex: 1 0 0;
  border: 0;
  border-radius: calc(var(--radii-root) * 0.5);
  min-width: calc(var(--size, 40px) - 2px);
  min-height: calc(var(--_height, var(--size, 40px)) - 2px);
  color: var(--color-light);
  outline: none;
  font-family: inherit;
  font-size: 16px;
  line-height: 24px;
  font-weight: 400;
  transition: 0.25s ease;
  transition-property: color, border-color, outline;
  appearance: none;
  padding: 0;
  background: none;

  &[type='range'] {
    appearance: initial;
    min-height: 0;
  }

  &[type='color']::-webkit-color-swatch-wrapper {
    padding: 0;
  }

  &[type='color']::-webkit-color-swatch {
    border: none;
    border-radius: calc(var(--radii-root) * 0.5);
  }

  &.disabled {
    pointer-events: none;
  }

  &:not(.custom) {
    padding: var(--_field-pv) 15px;

    &[type='range'] {
      padding: 0;
    }

    &:not(.editor):read-only {
      color: var(--color-text-comment);
    }
  }

  &::placeholder {
    color: var(--color-text-comment);
  }

  &:disabled {
    color: var(--color-text-comment);
  }

  &:invalid:not(:placeholder-shown) {
    color: var(--color-danger);
  }

  &::-webkit-inner-spin-button,
  &::-webkit-outer-spin-button {
    opacity: 1;
    background: none;
    margin: 0;
  }

  &::-webkit-inner-spin-button {
    width: 24px;
    height: 24px;
    background: none;
  }

  &File {
    visibility: hidden;
    display: none;

    &Container {
      display: flex;
      justify-content: center;
    }

    &Label {
      font-size: 14px;
      line-height: 20px;
      font-weight: 700;
      color: var(--color-light);
      border: none;
      margin: 0;
      background-image: var(--color-brand-bg);
      padding: 8px 16px;
      border-radius: var(--radii);
      cursor: pointer;
    }
  }
}

.body:has(> .input:not(.custom), > .editor) {
  border: 1px transparent solid;
  border-radius: calc(var(--radii-root) * 0.5);
  background: var(--color-dark-100);

  &:has(:focus-visible) {
    border-color: var(--color-text-comment);
  }

  &:has(:invalid:not(:placeholder-shown)) {
    border-color: var(--color-danger);
  }
}

.body:has(> .input:disabled) {
  background: var(--color-dark-90);
}

.prefix,
.suffix {
  color: var(--color-text-comment);
  flex: 0 0 auto;
}

.prefix {
  padding-inline-start: 15px;
}

.suffix {
  padding-inline-end: 15px;
}

.indicator {
  height: var(--size, 40px);
  width: 48px;
  padding: 0 16px;
  pointer-events: none;
  transition: 0.25s ease;
  display: grid;
  place-items: center;
  color: var(--color-text-comment);

  &:has(+ .input) {
    margin-inline-end: -48px;
    position: relative;
    z-index: 1;
  }

  & + .input {
    padding-inline-start: 48px;
  }

  .input + & {
    margin-inline-start: -48px;
    position: relative;
    z-index: 1;
  }

  .input:has(+ .indicator) {
    padding-inline-end: 48px;
  }
}

.input:where(textarea) {
  height: var(--size, 40px);
  max-height: 50vh;
  resize: vertical;
  overflow-wrap: break-word;
  width: 100%;
}

.input:where(select) {
  padding-right: 48px;

  & + .indicator {
    margin-left: -48px;
    color: var(--color-text-comment);
  }

  &:focus-visible + .indicator {
    color: var(--color-light);
  }
}

div.input {
  &:empty {
    display: none;
  }
}

.xxl {
  composes: xxl from '@/styles/_interactive.scss';
}

.xl {
  composes: xl from '@/styles/_interactive.scss';
}

.lg {
  composes: lg from '@/styles/_interactive.scss';
}

.md {
  composes: md from '@/styles/_interactive.scss';
}

.sm {
  composes: sm from '@/styles/_interactive.scss';
}

.xs {
  composes: xs from '@/styles/_interactive.scss';
}

.xxs {
  composes: xxs from '@/styles/_interactive.scss';
}

.files {
  margin: 0;
  padding: 0;
  list-style: none;
  display: flex;
  flex-flow: column;
  gap: 4px;
}

.filesItem {
  display: flex;
  align-items: center;
  gap: 8px;
}

.filesEntry {
  flex: 1;
}

.uploadStatus {
  display: flex;
  flex-direction: column;
  gap: 4px;
  min-width: 80px;
  font-size: 12px;
}

.uploadText {
  font-weight: 500;
}

.pending {
  .uploadText {
    color: var(--color-text-comment);
  }
}

.uploading {
  .uploadText {
    color: var(--color-primary);
  }
}

.completed {
  .uploadText {
    color: var(--color-success);
  }
}

.error {
  .uploadText {
    color: var(--color-danger);
  }
}

.editor {
  width: 100%;

  &Content {
    outline: none;
    color: var(--color-text-main);
    min-height: 5lh;
  }

  & ~ &Assistant {
    @include mixins.hidden;
  }

  &Toolbar {
    padding: var(--_field-pv) 15px;
  }
}

.body:has(> .editor) {
  overflow: hidden;
}
