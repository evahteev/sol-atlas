# Database Configuration
DB_NAME=solana_indexer
DB_PORT=5432

# ClickHouse Configuration
CLICKHOUSE_DATABASE=solana_indexer

# Network Configuration (for Solana)
RPC_URL=https://api.mainnet-beta.solana.com
GATEWAY_URL=https://v2.archive.subsquid.io/network/solana-mainnet
RPC_RATE_LIMIT=10

# Solana Indexer Configuration
# Based on: workdir/plan_docs/env_configuration.md

# ============================================================================
# Network Configuration
# ============================================================================

# Solana RPC endpoint
SOLANA_RPC_URL=https://api.mainnet-beta.solana.com
# Alternative: Use a dedicated RPC provider for better performance
# SOLANA_RPC_URL=https://solana-mainnet.g.alchemy.com/v2/YOUR_API_KEY
# SOLANA_RPC_URL=https://rpc.helius.xyz/?api-key=YOUR_API_KEY

# RPC rate limit (requests per second)
SOLANA_RPC_RATE_LIMIT=10

# Subsquid Gateway URL for Solana
# Note: Check if Subsquid supports Solana at https://docs.subsquid.io
SOLANA_GATEWAY_URL=https://v2.archive.subsquid.io/network/solana-mainnet

# Chain identifier
SOLANA_CHAIN_ID=solana-mainnet

# ============================================================================
# Block Range Configuration
# ============================================================================

# Starting slot (default: 250000000 for recent data)
# Use lower value to index historical data
SOLANA_START_SLOT=354874357

# Ending slot (optional, leave empty for continuous indexing)
# SOLANA_END_SLOT=260000000

# Batch size for processing
SOLANA_BATCH_SIZE=100

# ============================================================================
# Program IDs
# ============================================================================

# Jupiter V6 Program ID
JUPITER_V6_PROGRAM_ID=JUP6LkbZbjS1jKKwapdHNy74zcZ3tLUZoi5QNyVTaV4

# Jupiter V4 Program ID
JUPITER_V4_PROGRAM_ID=JUP4Fb2cqiRUcaTHdrPC8h2gNsA2ETXiPDD33WcGuJB

# Pump.fun Program ID
PUMP_PROGRAM_ID=6EF8rrecthR5Dkzon8Nwu78hRvfCKubJ14M5uBEwF6P

# ============================================================================
# Reference Tokens
# ============================================================================

# Native SOL (wrapped SOL)
SOLANA_NATIVE_TOKEN_ADDRESS=So11111111111111111111111111111111111111112

# USDC on Solana
SOLANA_USDC_ADDRESS=EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v

# ============================================================================
# Output Configuration
# ============================================================================

# ClickHouse connection string
# Format: clickhouse+http://username:password@host:port/database
SOLANA_OUTPUT=clickhouse+http://default:PASS@localhost:8123/solana_indexer

# Entity types to track
SOLANA_ENTITY_TYPES=dex_trade,dex_pool

# Entity types to save to ClickHouse
SOLANA_SAVING_ENTITIES=dex_trade

# ============================================================================
# ClickHouse Configuration (if not using OUTPUT string)
# ============================================================================

CLICKHOUSE_HOST=http://localhost:8123
CLICKHOUSE_USER=default
CLICKHOUSE_PASSWORD=PASS
CLICKHOUSE_DATABASE=solana_indexer

# ClickHouse retry configuration
CLICKHOUSE_TIMEOUT=30000
CLICKHOUSE_MAX_RETRIES=3
CLICKHOUSE_RETRY_DELAY=1000
CLICKHOUSE_MAX_RETRY_DELAY=10000

# ============================================================================
# Testing Configuration
# ============================================================================

# Test transaction signatures for validation
# Find these on Solscan.io or other Solana explorers

# Jupiter swap transaction (SOL -> Token)
TEST_JUPITER_TX=

# Pump.fun buy transaction
TEST_PUMP_BUY_TX=

# Pump.fun sell transaction
TEST_PUMP_SELL_TX=

# ============================================================================
# Optional: Alternative Data Sources
# ============================================================================

# If Subsquid doesn't support Solana, use alternative data sources:

# Helius WebSocket API
# HELIUS_API_KEY=your_helius_api_key
# HELIUS_WEBSOCKET_URL=wss://mainnet.helius-rpc.com/?api-key=YOUR_API_KEY

# Yellowstone gRPC
# YELLOWSTONE_GRPC_ENDPOINT=grpc.yellowstone.io:443
# YELLOWSTONE_API_KEY=your_yellowstone_api_key

# ============================================================================
# Notes
# ============================================================================

# 1. For production, use a dedicated RPC provider (Helius, Alchemy, QuickNode)
#    to avoid rate limiting and ensure reliability.
#
# 2. Check Subsquid documentation for Solana support:
#    https://docs.subsquid.io/
#
# 3. If Subsquid doesn't support Solana, implement alternative data source
#    in src/main-solana.ts (Helius, Yellowstone, or direct RPC polling)
#
# 4. Solana uses "slots" instead of "block numbers". Slots can be empty.
#
# 5. Transaction signatures in Solana are base58-encoded Ed25519 signatures,
#    not hashes like in EVM chains.


OUTPUT=clickhouse+http://default:PASS@localhost:8123/solana_indexer
